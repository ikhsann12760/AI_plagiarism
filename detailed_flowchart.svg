<svg width="1000" height="1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .box { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; }
      .decision { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; }
      .process { fill: #e8f5e8; stroke: #388e3c; stroke-width: 2; }
      .api { fill: #f3e5f5; stroke: #7b1fa2; stroke-width: 2; }
      .start-end { fill: #fce4ec; stroke: #c2185b; stroke-width: 2; }
      .error { fill: #ffebee; stroke: #d32f2f; stroke-width: 2; }
      .text { font-family: Arial, sans-serif; font-size: 11px; text-anchor: middle; }
      .small-text { font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle; }
      .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .title { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; text-anchor: middle; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="500" y="25" class="title">Flowchart Detail - Sistem Deteksi AI &amp; Plagiarisme</text>
  
  <!-- START -->
  <ellipse cx="500" cy="70" rx="80" ry="25" class="start-end"/>
  <text x="500" y="75" class="text">START</text>
  
  <!-- Flask App Initialize -->
  <rect x="420" y="110" width="160" height="35" class="box"/>
  <text x="500" y="130" class="text">Flask App Initialize</text>
  <text x="500" y="140" class="small-text">(Cache, Upload folder)</text>
  
  <!-- User Request -->
  <rect x="430" y="165" width="140" height="30" class="box"/>
  <text x="500" y="185" class="text">User HTTP Request</text>
  
  <!-- Route Handler -->
  <rect x="420" y="215" width="160" height="35" class="box"/>
  <text x="500" y="235" class="text">Route Handler @app.route</text>
  <text x="500" y="245" class="small-text">(GET/POST method)</text>
  
  <!-- Check Method -->
  <polygon points="500,270 580,300 500,330 420,300" class="decision"/>
  <text x="500" y="300" class="text">Method == POST?</text>
  
  <!-- GET Method - Show Form -->
  <rect x="650" y="280" width="140" height="40" class="box"/>
  <text x="720" y="300" class="text">Render Template</text>
  <text x="720" y="310" class="small-text">(index.html form)</text>
  
  <!-- File Upload Validation -->
  <rect x="420" y="360" width="160" height="40" class="box"/>
  <text x="500" y="380" class="text">File Upload Validation</text>
  <text x="500" y="390" class="small-text">(request.files.get)</text>
  
  <!-- File Valid Check -->
  <polygon points="500,420 580,450 500,480 420,450" class="decision"/>
  <text x="500" y="450" class="text">File Valid?</text>
  <text x="500" y="460" class="small-text">(PDF/DOCX)</text>
  
  <!-- Error Handling -->
  <rect x="650" y="430" width="140" height="40" class="error"/>
  <text x="720" y="450" class="text">Error Response</text>
  <text x="720" y="460" class="small-text">(render error.html)</text>
  
  <!-- File Size Check -->
  <polygon points="500,510 580,540 500,570 420,540" class="decision"/>
  <text x="500" y="540" class="text">Size &lt; 16MB?</text>
  <text x="500" y="550" class="small-text">(MAX_CONTENT_LENGTH)</text>
  
  <!-- Save File Temporarily -->
  <rect x="420" y="590" width="160" height="40" class="process"/>
  <text x="500" y="610" class="text">Save File Temporarily</text>
  <text x="500" y="620" class="small-text">(uploads folder)</text>
  
  <!-- Text Extraction -->
  <polygon points="500,650 580,680 500,710 420,680" class="decision"/>
  <text x="500" y="680" class="text">File Type?</text>
  <text x="500" y="690" class="small-text">(PDF/DOCX)</text>
  
  <!-- PDF Extraction -->
  <rect x="300" y="730" width="160" height="40" class="process"/>
  <text x="380" y="750" class="text">PyPDF2.PdfReader</text>
  <text x="380" y="760" class="small-text">(extract_text_from_pdf)</text>
  
  <!-- DOCX Extraction -->
  <rect x="540" y="730" width="160" height="40" class="process"/>
  <text x="620" y="750" class="text">docx.Document</text>
  <text x="620" y="760" class="small-text">(extract_text_from_docx)</text>
  
  <!-- Text Preprocessing -->
  <rect x="420" y="800" width="160" height="50" class="process"/>
  <text x="500" y="820" class="text">Text Preprocessing</text>
  <text x="500" y="830" class="small-text">(NLTK stopwords removal)</text>
  <text x="500" y="840" class="small-text">(Tokenization, lowercase)</text>
  
  <!-- Plagiarism Detection -->
  <rect x="400" y="870" width="200" height="50" class="process"/>
  <text x="500" y="890" class="text">Plagiarism Detection</text>
  <text x="500" y="900" class="small-text">(TF-IDF Vectorization)</text>
  <text x="500" y="910" class="small-text">(Cosine Similarity Calculation)</text>
  
  <!-- AI Detection API Call -->
  <rect x="400" y="940" width="200" height="60" class="api"/>
  <text x="500" y="965" class="text">AI Detection API Call</text>
  <text x="500" y="975" class="small-text">(Sapling.ai API)</text>
  <text x="500" y="985" class="small-text">(requests.post with API key)</text>
  <text x="500" y="995" class="small-text">(Environment variable check)</text>
  
  <!-- API Response Check -->
  <polygon points="500,1020 580,1050 500,1080 420,1050" class="decision"/>
  <text x="500" y="1050" class="text">API Success?</text>
  <text x="500" y="1060" class="small-text">(status_code == 200)</text>
  
  <!-- API Error Handling -->
  <rect x="650" y="1030" width="140" height="40" class="error"/>
  <text x="720" y="1050" class="text">API Error Logging</text>
  <text x="720" y="1060" class="small-text">(Return default score)</text>
  
  <!-- Score Processing -->
  <rect x="420" y="1100" width="160" height="50" class="process"/>
  <text x="500" y="1120" class="text">Score Processing</text>
  <text x="500" y="1130" class="text">Similarity: X%</text>
  <text x="500" y="1140" class="text">AI Detection: Y%</text>
  
  <!-- Session Storage -->
  <rect x="420" y="1170" width="160" height="40" class="box"/>
  <text x="500" y="1190" class="text">Store in Flask Session</text>
  <text x="500" y="1200" class="small-text">(session['similarity/classification'])</text>
  
  <!-- File Cleanup -->
  <rect x="420" y="1230" width="160" height="40" class="process"/>
  <text x="500" y="1250" class="text">File Cleanup</text>
  <text x="500" y="1260" class="small-text">(os.remove temporary file)</text>
  
  <!-- Redirect -->
  <rect x="420" y="1290" width="160" height="40" class="box"/>
  <text x="500" y="1310" class="text">Redirect to Index</text>
  <text x="500" y="1320" class="small-text">(url_for('index'))</text>
  
  <!-- Render Results -->
  <rect x="420" y="1350" width="160" height="50" class="box"/>
  <text x="500" y="1370" class="text">Render Template</text>
  <text x="500" y="1380" class="small-text">(index.html with results)</text>
  <text x="500" y="1390" class="small-text">(Chart.js visualization)</text>
  
  <!-- END -->
  <ellipse cx="500" cy="1450" rx="80" ry="25" class="start-end"/>
  <text x="500" y="1455" class="text">END</text>
  
  <!-- Error Handler -->
  <rect x="50" y="1470" width="140" height="40" class="error"/>
  <text x="120" y="1490" class="text">Global Error Handler</text>
  <text x="120" y="1500" class="small-text">(try-except blocks)</text>
  
  <!-- Arrows -->
  <line x1="500" y1="95" x2="500" y2="110" class="arrow"/>
  <line x1="500" y1="145" x2="500" y2="165" class="arrow"/>
  <line x1="500" y1="195" x2="500" y2="215" class="arrow"/>
  <line x1="500" y1="250" x2="500" y2="270" class="arrow"/>
  <line x1="580" y1="300" x2="650" y2="300" class="arrow"/>
  <line x1="500" y1="330" x2="500" y2="360" class="arrow"/>
  <line x1="500" y1="400" x2="500" y2="420" class="arrow"/>
  <line x1="580" y1="450" x2="650" y2="450" class="arrow"/>
  <line x1="500" y1="480" x2="500" y2="510" class="arrow"/>
  <line x1="580" y1="540" x2="650" y2="540" class="arrow"/>
  <line x1="500" y1="570" x2="500" y2="590" class="arrow"/>
  <line x1="500" y1="630" x2="500" y2="650" class="arrow"/>
  <line x1="420" y1="680" x2="380" y2="730" class="arrow"/>
  <line x1="580" y1="680" x2="620" y2="730" class="arrow"/>
  <line x1="380" y1="770" x2="500" y2="800" class="arrow"/>
  <line x1="620" y1="770" x2="500" y2="800" class="arrow"/>
  <line x1="500" y1="850" x2="500" y2="870" class="arrow"/>
  <line x1="500" y1="920" x2="500" y2="940" class="arrow"/>
  <line x1="500" y1="1000" x2="500" y2="1020" class="arrow"/>
  <line x1="580" y1="1050" x2="650" y2="1050" class="arrow"/>
  <line x1="500" y1="1080" x2="500" y2="1100" class="arrow"/>
  <line x1="500" y1="1150" x2="500" y2="1170" class="arrow"/>
  <line x1="500" y1="1210" x2="500" y2="1230" class="arrow"/>
  <line x1="500" y1="1270" x2="500" y2="1290" class="arrow"/>
  <line x1="500" y1="1330" x2="500" y2="1350" class="arrow"/>
  <line x1="500" y1="1400" x2="500" y2="1425" class="arrow"/>
  
  <!-- Return arrows for error paths -->
  <line x1="720" y1="320" x2="720" y2="1350" class="arrow" stroke-dasharray="5,5"/>
  <line x1="720" y1="1350" x2="580" y2="1370" class="arrow" stroke-dasharray="5,5"/>
  <line x1="610" y1="460" x2="610" y2="180" class="arrow" stroke-dasharray="5,5"/>
  <line x1="610" y1="180" x2="570" y2="180" class="arrow" stroke-dasharray="5,5"/>
  <line x1="610" y1="540" x2="610" y2="180" class="arrow" stroke-dasharray="5,5"/>
  <line x1="720" y1="1070" x2="720" y2="1120" class="arrow" stroke-dasharray="5,5"/>
  <line x1="720" y1="1120" x2="580" y2="1120" class="arrow" stroke-dasharray="5,5"/>
  
  <!-- Labels for decision paths -->
  <text x="620" y="295" class="small-text">GET</text>
  <text x="540" y="345" class="small-text">POST</text>
  <text x="620" y="435" class="small-text">No File</text>
  <text x="540" y="485" class="small-text">File Uploaded</text>
  <text x="620" y="515" class="small-text">Invalid</text>
  <text x="540" y="565" class="small-text">Valid</text>
  <text x="320" y="675" class="small-text">PDF</text>
  <text x="680" y="675" class="small-text">DOCX</text>
  <text x="690" y="1045" class="small-text">Error</text>
  <text x="540" y="1095" class="small-text">Success</text>
  
</svg>